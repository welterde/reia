rules <- space? declaration_sequence space?;

declaration_sequence <- head:declaration tail:(space declaration)*;

declaration <- nonterminal space '<-' space parsing_expression space? ';';

parsing_expression <- choice / sequence / primary;

choice <- head:alternative tail:(space '/' space alternative)+;

alternative <- sequence / primary;

primary <- prefix atomic / atomic suffix / atomic;

sequence <- head:labeled_sequence_primary tail:(space labeled_sequence_primary)+;

labeled_sequence_primary <- label? primary;

label <- alpha_char alphanumeric_char* ':';

suffix <- repetition_suffix / optional_suffix;

optional_suffix <- '?';

repetition_suffix <- '+' / '*';

prefix <- '&' / '!';

atomic <- terminal / nonterminal / parenthesized_expression;

parenthesized_expression <- '(' space? parsing_expression space? ')';

nonterminal <- alpha_char alphanumeric_char*;

terminal <- quoted_string / character_class / anything_symbol;

quoted_string <- single_quoted_string / double_quoted_string;

double_quoted_string <- '"' string:(!'"' ("\\\\" / '\\"' / .))* '"';

single_quoted_string <- "'" string:(!"'" ("\\\\" / "\\'" / .))* "'";

character_class <- '[' characters:(!']' ('\\\\' . / !'\\\\' .))+ ']';

anything_symbol <- '.';

alpha_char <- [a-z_];

alphanumeric_char <- alpha_char / [0-9];

space <- (white / comment_to_eol)+;

comment_to_eol <- '%' (!"\n" .)*;

white <- [ \t\n\r];